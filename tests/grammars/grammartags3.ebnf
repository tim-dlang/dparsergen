// EXCLUDE_VARIANT: normal
// EXCLUDE_VARIANT: optdescent
S = <Declaration;
Declaration = <SimpleDeclaration | <FunctionDefinition;

FunctionDefinition
    = FunctionDefinitionHead ";"
    ;
FunctionDefinitionHead
    = DeclSpecifierSeq @needTag(FunctionDeclarator) @rejectTag(NonFunctionDeclarator) Declarator
    ;
Declarator
    = <PtrDeclarator
    ;
PtrDeclarator
    = <NoptrDeclarator
    | "*" @inheritTag(FunctionDeclarator) @inheritTag(NonFunctionDeclarator) PtrDeclarator @tag(PtrDeclarator)
    ;
NoptrDeclarator
    = DeclaratorId
    | <FunctionDeclarator
    | "(" @needTag(PtrDeclarator) PtrDeclarator ")" @tag(NonFunctionDeclarator)
    | "(" @rejectTag(PtrDeclarator) PtrDeclarator ")"
    ;
FunctionDeclarator
    = @inheritTag(NonFunctionDeclarator) NoptrDeclarator ParametersAndQualifiers @tag(FunctionDeclarator)
    ;
ParametersAndQualifiers
    = "(" ParameterDeclarationList ")"
    ;
ParameterDeclarationList @array
    = ParameterDeclaration
    | ParameterDeclarationList "," ParameterDeclaration
    ;
ParameterDeclaration
    = DeclSpecifierSeq Declarator
    | <ParameterDeclarationAbstract
    ;
ParameterDeclarationAbstract
    = DeclSpecifierSeq AbstractDeclaratorOpt
    ;

InitDeclaratorList @array
    = InitDeclarator
    | InitDeclaratorList "," InitDeclarator
    ;
InitDeclarator
    = <Declarator
    | @rejectTag(FunctionDeclarator) Declarator Initializer
    | @needTag(NonFunctionDeclarator) @needTag(FunctionDeclarator) Declarator Initializer
    ;
Initializer
    = "(" ExpressionList ")"
    ;
ExpressionList @array
    = <InitializerList
    ;
InitializerList @array
    = InitializerClauseDesignator
    | InitializerList "," InitializerClauseDesignator
    ;
InitializerClause
    = AssignmentExpression
    ;
InitializerClauseDesignator
    = <InitializerClause
    ;
SimpleDeclaration
    = DeclSpecifierSeq InitDeclaratorList ";"
    ;

DeclSpecifierSeq = "id";

AbstractDeclaratorOpt
    = @empty
    | AbstractDeclaratorOpt "*"
    ;

AssignmentExpression
    = "id"
    | "(" AssignmentExpression ")";

DeclaratorId = "id";

token Space @ignoreToken = " ";
